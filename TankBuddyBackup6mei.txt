using HtmlAgilityPack;
using Newtonsoft.Json;
using System.IO;
using System.Windows;
using System.Windows.Controls;


namespace TankBuddy
{
    public partial class MainWindow : Window
    {
        private const string tankgeschiedenisJSON = "tankgeschiedenis.json";
        private const string prijsgeschiedenisJSON = "prijsgeschiedenis.json";
        private List<string> nummerplaten = new List<string>(); // Nieuwe lijst voor nummerplaten

        public MainWindow()
        {
            InitializeComponent();
            ActuelePrijzen();

            // Lees bestaande gegevens uit het bestand
            if (File.Exists(tankgeschiedenisJSON))
            {
                LeesTankGeschiedenis();
            }

            // Voeg nummerplaten toe aan List<string>
            VoegNummerplatenToe("Nummerplaat 1");
            VoegNummerplatenToe("Nummerplaat 2");
            VoegNummerplatenToe("Nummerplaat 3");
            VoegNummerplatenToe("Nummerplaat 4");
            VoegNummerplatenToe("Nummerplaat 6");

            // Voeg nummerplaten toe aan ComboBox
            cbxVoertuig.ItemsSource = nummerplaten;

            // Voeg brandstoffen toe aan ComboBox cbxBrandstof
            cbxBrandstof.Items.Add("Diesel");
            cbxBrandstof.Items.Add("Euro 95");
            cbxBrandstof.Items.Add("Euro 98");
            cbxBrandstof.Items.Add("Euro 102");
        }

        private void ActuelePrijzen()
        {
            // Haal prijzen bij carbu.com want xPath naar actuele prijzen niet onmiddelijk beschikbaar bij website dats24.be...
            // Na meermaals checken lijken de prijzen bij carbu.com up-to-date te zijn!
            ActuelePrijsZoeken("Euro 95", "https://carbu.com/belgie//liste-stations-service/E10/Izegem/8870/BE_foc_2503/76", lblActuelePrijsEuro95);
            ActuelePrijsZoeken("Euro 98", "https://carbu.com/belgie//liste-stations-service/SP98/Izegem/8870/BE_foc_2503/76", lblActuelePrijsEuro98);
            ActuelePrijsZoeken("Diesel", "https://carbu.com/belgie//liste-stations-service/GO/Izegem/8870/BE_foc_2503/76", lblActuelePrijsDiesel);
        }

        private void ActuelePrijsZoeken(string brandstofType, string url, Label label)
        {
            try
            {
                // HTML-document laden van de URL
                HtmlWeb web = new HtmlWeb();
                HtmlDocument document = web.Load(url);

                // XPath-query om de elementen te selecteren die de tankprijzen bevatten
                string xpathQuery = "/html/body/main/section/div/div/div/div/div[1]/div[2]/div/div/div/div/div[5]/span[2]";

                // Selecteer het eerste element dat de tankprijs bevat
                HtmlNode priceNode = document.DocumentNode.SelectSingleNode(xpathQuery);

                // Als het element is gevonden, haal de prijs op en stel deze in op de Label
                if (priceNode != null)
                {
                    string tankPrijs = priceNode.InnerText.Trim();
                    // Vervang "&euro;" door het euroteken en voeg de juiste opmaak toe
                    tankPrijs = tankPrijs.Replace("&euro;", "€");
                    label.Content = $"{brandstofType}: {tankPrijs}";

                    // Schrijf de prijs naar het prijsgeschiedenisbestand
                    SchrijfPrijsNaarBestand(brandstofType, tankPrijs);
                }
                else
                {
                    label.Content = "Tankprijs niet gevonden";
                }
            }
            catch (Exception ex)
            {
                label.Content = $"Fout bij het ophalen van tankprijzen voor {brandstofType}: {ex.Message}";
            }
        }

        private void SchrijfPrijsNaarBestand(string brandstofType, string prijs)
        {
            try
            {
                string huidigeDatum = DateTime.Now.ToString("dd-MM-yyyy");
                var nieuwePrijsData = new { Datum = huidigeDatum, Brandstof = brandstofType.Replace(" ", ""), Prijs = prijs.Replace(" €/L", "") };

                List<dynamic> bestandsInhoud = new List<dynamic>();

                // Controleer of het bestand al bestaat
                if (File.Exists(prijsgeschiedenisJSON))
                {
                    // Lees de huidige inhoud van het JSON-bestand
                    string jsonText = File.ReadAllText(prijsgeschiedenisJSON);

                    // Deserialiseer de inhoud naar een lijst van objecten
                    bestandsInhoud = JsonConvert.DeserializeObject<List<dynamic>>(jsonText);
                }

                // Zoek of er al gegevens zijn voor de huidige datum en brandstof
                bool datumGevonden = false;
                for (int i = 0; i < bestandsInhoud.Count; i++)
                {
                    if (bestandsInhoud[i]["Datum"].ToString() == huidigeDatum && bestandsInhoud[i]["Brandstof"].ToString() == nieuwePrijsData.Brandstof)
                    {
                        // Overschrijf de bestaande gegevens voor deze datum met de nieuwe prijs
                        bestandsInhoud[i]["Prijs"] = nieuwePrijsData.Prijs;
                        datumGevonden = true;
                        break;
                    }
                }

                // Als er geen gegevens zijn voor de huidige datum, voeg dan nieuwe gegevens toe
                if (!datumGevonden)
                {
                    bestandsInhoud.Add(nieuwePrijsData);
                }

                // Serialiseer de gegevens naar JSON
                string jsonData = JsonConvert.SerializeObject(bestandsInhoud, Formatting.Indented);

                // Schrijf de bijgewerkte inhoud terug naar het bestand
                File.WriteAllText(prijsgeschiedenisJSON, jsonData);
            }
            catch (Exception ex)
            {
                MessageBox.Show("Fout bij het schrijven naar het bestand: " + ex.Message);
            }
        }

        private void VoegNummerplatenToe(string nummerplaat)
        {
            nummerplaten.Add(nummerplaat);
        }

        private void LeesTankGeschiedenis()
        {
            try
            {
                using (StreamReader sr = new StreamReader(tankgeschiedenisJSON))
                {
                    string lijn;
                    while ((lijn = sr.ReadLine()) != null)
                    {
                        // Deserialize JSON-lijn naar Tank-object
                        Tank tank = JsonConvert.DeserializeObject<Tank>(lijn);

                        // Voeg tank toe aan ListBox
                        VoegToeAanGeschiedenis(tank);
                    }
                }
            }
            catch (Exception ex)
            {
                MessageBox.Show("Fout bij het lezen van het bestand: " + ex.Message);
            }
        }

        private void Toevoegen_Click(object sender, RoutedEventArgs e)
        {
            // Controleer of alle tekstvakken zijn ingevuld
            if (!string.IsNullOrEmpty(txbLiters.Text) && !string.IsNullOrEmpty(txbPrijsLiter.Text) && !string.IsNullOrEmpty(txbDatum.Text) && !string.IsNullOrEmpty(txbVerbruik.Text))
            {
                // Controleer of er een item is geselecteerd in de ComboBox
                if (cbxVoertuig.SelectedItem != null)
                {
                    // Maak een nieuw tankobject aan
                    Tank tank = new Tank
                    {
                        Voertuig = cbxVoertuig.SelectedItem.ToString(), // Voertuignaam uit ComboBox
                        Liters = double.Parse(txbLiters.Text),
                        PrijsPerLiter = double.Parse(txbPrijsLiter.Text),
                        Datum = DateTime.Parse(txbDatum.Text),
                        Verbruik = double.Parse(txbVerbruik.Text),
                        Brandstof = cbxBrandstof.SelectedItem.ToString() // Brandstof uit ComboBox
                    };

                    // Voeg tank toe aan geschiedenis
                    VoegToeAanGeschiedenis(tank);

                    // Converteer naar JSON
                    string json = JsonConvert.SerializeObject(tank);

                    // Schrijf JSON naar bestand
                    SchrijfNaarBestand(json);
                }
                else
                {
                    MessageBox.Show("Selecteer een voertuig.");
                }
            }
            else
            {
                MessageBox.Show("Gelieve alle velden in te vullen.");
            }
        }

        private void VoegToeAanGeschiedenis(Tank tank)
        {
            // Voeg tank toe aan ListBox
            lstGeschiedenis.Items.Add($"{tank.Voertuig} - {tank.Liters}L - €{tank.PrijsPerLiter}/L - {tank.Datum.ToString("dd/MM/yyyy")} - {tank.Verbruik}L/100km - {tank.Brandstof}");
        }

        private void SchrijfNaarBestand(string data)
        {
            try
            {
                using (StreamWriter sw = File.AppendText(tankgeschiedenisJSON))
                {
                    sw.WriteLine(data);
                }
            }
            catch (Exception ex)
            {
                MessageBox.Show("Fout bij het schrijven naar het bestand: " + ex.Message);
            }
        }
    }
    
    public class Tank
    {
        public string Voertuig { get; set; }
        public double Liters { get; set; }
        public double PrijsPerLiter { get; set; }
        public DateTime Datum { get; set; }
        public double Verbruik { get; set; }
        public string Brandstof { get; set; }
    }
}

<Window x:Class="TankBuddy.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:TankBuddy"
        mc:Ignorable="d"
        Title="TankBuddy | Startscherm" SizeToContent="Height" MinWidth="800" Width="900">
    <ScrollViewer VerticalScrollBarVisibility="Hidden">
        <Grid>

            <Image Source="/Logo.jpg" Stretch="UniformToFill" Opacity="0.3">

                <Image.Effect>
                    <BlurEffect Radius="15"/>
                </Image.Effect>

            </Image>

            <StackPanel>
                <GroupBox 
                    Name="grpbxToevoegen" Header="Voeg een tankbeurt toe" Margin="10" BorderBrush="Black" FontFamily="Montserrat" 
                    FontWeight="Bold" Foreground="Black" FontSize="25" BorderThickness="1">

                    <StackPanel>

                        <StackPanel Orientation="Horizontal">

                            <TextBlock Text="Voertuig" FontSize="15" Width="75" Margin="15,0,0,0"></TextBlock>
                            <TextBlock Text="Liters" FontSize="15" Width="75" Margin="15,0,0,0"></TextBlock>
                            <TextBlock Text="Prijs/L (€/L)" FontSize="15" Width="100" Margin="15,0,0,0"></TextBlock>
                            <TextBlock Text="Datum" FontSize="15" Width="100" Margin="15,0,0,0"></TextBlock>
                            <TextBlock Text="Ø (L/100km)" FontSize="15" Width="100" Margin="15,0,0,0"></TextBlock>
                            <TextBlock Text="Brandstof" FontSize="15" Width="100" Margin="15,0,0,0"></TextBlock>
                        </StackPanel>

                        <StackPanel Orientation="Horizontal">

                            <ComboBox Name="cbxVoertuig" FontSize="15" Width="75" Margin="15,0,0,0"></ComboBox>
                            <TextBox Name="txbLiters" Width="75" Margin="15,0,0,0">...</TextBox>
                            <TextBox Name="txbPrijsLiter" Width="100" Margin="15,0,0,0">...</TextBox>
                            <TextBox Name="txbDatum" Width="100" Margin="15,0,0,0">...</TextBox>
                            <TextBox Name="txbVerbruik" Width="100" Margin="15,0,0,0">...</TextBox>
                            <ComboBox Name="cbxBrandstof" FontSize="15" Width="100" Margin="15,0,0,0"></ComboBox>

                        </StackPanel>
                        <Button Content="Toevoegen" Click="Toevoegen_Click" Margin="15,10,0,10"/>
                    </StackPanel>

                </GroupBox>

                <GroupBox 
                    Name="grpbxGeschiedenis" Header="Tankgeschiedenis" Margin="10" BorderBrush="Black" FontFamily="Montserrat" 
                    FontWeight="Bold" Foreground="Black" FontSize="25" BorderThickness="1">

                    <StackPanel>
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text="Voertuig" FontSize="15" Width="75" Margin="15,0,0,0"></TextBlock>
                            <TextBlock Text="Liters" FontSize="15" Width="75" Margin="15,0,0,0"></TextBlock>
                            <TextBlock Text="Prijs/L (€/L)" FontSize="15" Width="100" Margin="15,0,0,0"></TextBlock>
                            <TextBlock Text="Datum" FontSize="15" Width="100" Margin="15,0,0,0"></TextBlock>
                            <TextBlock Text="Ø (L/100km)" FontSize="15" Width="100" Margin="15,0,0,0"></TextBlock>
                            <TextBlock Text="Brandstof" FontSize="15" Width="100" Margin="15,0,0,0"></TextBlock>
                        </StackPanel>

                        <StackPanel>
                            <ListBox x:Name="lstGeschiedenis" Margin="10"/>
                        </StackPanel>
                    </StackPanel>

                </GroupBox>

                <GroupBox 
                    Name="grpbxActuelePrijzen" Header="Actuele prijzen Dats24 Izegem" Margin="10" BorderBrush="Black" FontFamily="Montserrat" 
                    FontWeight="Bold" Foreground="Black" FontSize="25" BorderThickness="1">
                    
                    <StackPanel>
                        <Label Name="lblActuelePrijsEuro95"></Label>
                        <Label Name="lblActuelePrijsEuro98"></Label>
                        <Label Name="lblActuelePrijsDiesel"></Label>
                    </StackPanel>
                      
                </GroupBox>
                

            </StackPanel>

        </Grid>
    </ScrollViewer>

</Window>


Ik zou graag hebben dat je het bestand prijsgeschiedenis.json uitleest en ervan een grafiek maakt! Graag in grpbxActuelePrijzen een grafiek maken van de prijzen

ChatGPT
Om een grafiek van de prijsgeschiedenis te maken, kunnen we gebruik maken van een grafiekcomponent in WPF, zoals System.Windows.Controls.DataVisualization.Charting.Chart. Hieronder zie je hoe je dit kunt 